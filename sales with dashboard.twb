<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0305.1200                               -->
<workbook original-version='10.5' source-build='10.5.2 (10500.18.0305.1200)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='transactions++ (sales)' inline='true' name='federated.0gr9t901aaondo15r4ur21mfyspp' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0t4c6tf1ukvi70114wspb0mphmkm'>
            <connection class='mysql' dbname='sales' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[transactions+].[product_code]' />
              <expression op='[products].[product_code]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[transactions+].[order_date]' />
                <expression op='[date].[date]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[transactions+].[market_code]' />
                  <expression op='[markets].[markets_code]' />
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[transactions+].[customer_code]' />
                    <expression op='[customers].[customer_code]' />
                  </expression>
                </clause>
                <relation all='true' name='transactions+' type='union'>
                  <relation connection='mysql.0t4c6tf1ukvi70114wspb0mphmkm' name='transactions' table='[transactions]' type='table' />
                </relation>
                <relation connection='mysql.0t4c6tf1ukvi70114wspb0mphmkm' name='customers' table='[customers]' type='table' />
              </relation>
              <relation connection='mysql.0t4c6tf1ukvi70114wspb0mphmkm' name='markets' table='[markets]' type='table' />
            </relation>
            <relation connection='mysql.0t4c6tf1ukvi70114wspb0mphmkm' name='date' table='[date]' type='table' />
          </relation>
          <relation connection='mysql.0t4c6tf1ukvi70114wspb0mphmkm' name='products' table='[products]' type='table' />
        </relation>
        <cols>
          <map key='[Table Name]' value='[transactions+].[Table Name]' />
          <map key='[currency]' value='[transactions+].[currency]' />
          <map key='[custmer_name]' value='[customers].[custmer_name]' />
          <map key='[customer_code (customers)]' value='[customers].[customer_code]' />
          <map key='[customer_code]' value='[transactions+].[customer_code]' />
          <map key='[customer_type]' value='[customers].[customer_type]' />
          <map key='[cy_date]' value='[date].[cy_date]' />
          <map key='[date]' value='[date].[date]' />
          <map key='[date_yy_mmm]' value='[date].[date_yy_mmm]' />
          <map key='[market_code]' value='[transactions+].[market_code]' />
          <map key='[markets_code]' value='[markets].[markets_code]' />
          <map key='[markets_name]' value='[markets].[markets_name]' />
          <map key='[month_name]' value='[date].[month_name]' />
          <map key='[order_date]' value='[transactions+].[order_date]' />
          <map key='[product_code (products)]' value='[products].[product_code]' />
          <map key='[product_code]' value='[transactions+].[product_code]' />
          <map key='[product_type]' value='[products].[product_type]' />
          <map key='[sales_amount]' value='[transactions+].[sales_amount]' />
          <map key='[sales_qty]' value='[transactions+].[sales_qty]' />
          <map key='[year]' value='[date].[year]' />
          <map key='[zone]' value='[markets].[zone]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code]</local-name>
            <parent-name>[transactions+]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code]</local-name>
            <parent-name>[transactions+]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[market_code]</local-name>
            <parent-name>[transactions+]</parent-name>
            <remote-alias>market_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_date]</local-name>
            <parent-name>[transactions+]</parent-name>
            <remote-alias>order_date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_qty</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sales_qty]</local-name>
            <parent-name>[transactions+]</parent-name>
            <remote-alias>sales_qty</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sales_amount]</local-name>
            <parent-name>[transactions+]</parent-name>
            <remote-alias>sales_amount</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>currency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[currency]</local-name>
            <parent-name>[transactions+]</parent-name>
            <remote-alias>currency</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[transactions+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RIN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code (customers)]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>custmer_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[custmer_name]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>custmer_name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_type]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_type</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_code]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_code</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_name]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_name</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[zone]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>zone</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>17</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cy_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[cy_date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>cy_date</remote-alias>
            <ordinal>18</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month_name]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>month_name</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_yy_mmm</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date_yy_mmm]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date_yy_mmm</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code (products)]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_type]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_type</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='BLANK' datatype='string' name='[Calculation_140174580759797762]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot; &quot;' />
      </column>
      <column caption='normalised amount' datatype='real' name='[Calculation_230528047621357568]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [currency] == &quot;USD&quot; then [sales_amount]*74 ELSE [sales_amount] END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
      <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
      <column caption='Customer Code (Customers)' datatype='string' name='[customer_code (customers)]' role='dimension' type='nominal' />
      <column caption='Customer Code' datatype='string' name='[customer_code]' role='dimension' type='nominal' />
      <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
      <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Yy Mmm' datatype='string' name='[date_yy_mmm]' role='dimension' type='nominal' />
      <column caption='Market Code' datatype='string' name='[market_code]' role='dimension' type='nominal' />
      <column caption='Markets Code' datatype='string' name='[markets_code]' role='dimension' type='nominal' />
      <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
      <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
      <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
      <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
      <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
      <column caption='Product Type' datatype='string' name='[product_type]' role='dimension' type='nominal' />
      <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
      <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column caption='Zone' datatype='string' name='[zone]' role='dimension' type='nominal' />
      <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (BLANK,Month Name)' hidden='true' name='[Action (BLANK,Month Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_140174580759797762]' />
          <groupfilter function='level-members' level='[month_name]' />
        </groupfilter>
      </group>
      <group caption='Action (BLANK,YEAR(Cy Date))' hidden='true' name='[Action (BLANK,YEAR(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_140174580759797762]' />
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Markets Name)' hidden='true' name='[Action (Markets Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[markets_name]' />
        </groupfilter>
      </group>
      <group caption='Action (Product Code)' hidden='true' name='[Action (Product Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[product_code]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.848861' measure-ordering='alphabetic' measure-percentage='0.151139' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='customer_code (customers)' />
        <field-sort-custom-order field='custmer_name' />
        <field-sort-custom-order field='customer_type' />
        <field-sort-custom-order field='date' />
        <field-sort-custom-order field='cy_date' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='month_name' />
        <field-sort-custom-order field='date_yy_mmm' />
        <field-sort-custom-order field='markets_code' />
        <field-sort-custom-order field='markets_name' />
        <field-sort-custom-order field='zone' />
        <field-sort-custom-order field='product_code (products)' />
        <field-sort-custom-order field='product_type' />
        <field-sort-custom-order field='product_code' />
        <field-sort-custom-order field='customer_code' />
        <field-sort-custom-order field='market_code' />
        <field-sort-custom-order field='order_date' />
        <field-sort-custom-order field='sales_qty' />
        <field-sort-custom-order field='sales_amount' />
        <field-sort-custom-order field='currency' />
        <field-sort-custom-order field='Calculation_230528047621357568' />
        <field-sort-custom-order field='Table Name' />
      </field-sort-info>
      <filter class='categorical' column='[markets_code]' filter-group='2'>
        <groupfilter from='&quot;Mark001&quot;' function='range' level='[markets_code]' to='&quot;Mark015&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[sales_amount]' filter-group='2' included-values='in-range'>
        <min>1.0</min>
        <max>1510944.0</max>
      </filter>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='DASHBOARD' type='sheet' worksheet='YEAR' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='DASHBOARD' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='DASHBOARD' type='sheet' worksheet='MONTH' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='DASHBOARD' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='DASHBOARD' type='sheet' worksheet='QUANTITY' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='DASHBOARD' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='DASHBOARD' type='sheet' worksheet='REVENUE BY MARKET' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='DASHBOARD' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='DASHBOARD' type='sheet' worksheet='SALES QUANTITY' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='DASHBOARD' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='DASHBOARD' type='sheet' worksheet='TOP 5 CUSTOMERS' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='DASHBOARD' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='DASHBOARD' type='sheet' worksheet='TOP 5 PRODUCT' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='DASHBOARD' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='MONTH'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions++ (sales)' name='federated.0gr9t901aaondo15r4ur21mfyspp' />
          </datasources>
          <datasource-dependencies datasource='federated.0gr9t901aaondo15r4ur21mfyspp'>
            <column caption='BLANK' datatype='string' name='[Calculation_140174580759797762]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_140174580759797762]' derivation='None' name='[none:Calculation_140174580759797762:nk]' pivot='key' type='nominal' />
            <column-instance column='[month_name]' derivation='None' name='[none:month_name:nk]' pivot='key' type='nominal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_140174580759797762]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (Product Code)]'>
            <groupfilter function='level-members' level='[product_code]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[none:month_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:month_name:nk]' />
              <groupfilter function='member' level='[none:month_name:nk]' member='&quot;December&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[none:month_name:nk]</column>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (Product Code)]</column>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (Markets Name)]</column>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='18' />
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
            <format attr='height' field='[federated.0gr9t901aaondo15r4ur21mfyspp].[none:Calculation_140174580759797762:nk]' value='12' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0gr9t901aaondo15r4ur21mfyspp].[none:month_name:nk]' value='32' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0gr9t901aaondo15r4ur21mfyspp].[none:Calculation_140174580759797762:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0gr9t901aaondo15r4ur21mfyspp].[none:month_name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='QUANTITY'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#f28e2b'>sales Quantity</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions++ (sales)' name='federated.0gr9t901aaondo15r4ur21mfyspp' />
          </datasources>
          <datasource-dependencies datasource='federated.0gr9t901aaondo15r4ur21mfyspp'>
            <column caption='BLANK' datatype='string' name='[Calculation_140174580759797762]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,Month Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_140174580759797762]' />
              <groupfilter function='level-members' level='[month_name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_140174580759797762]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (Product Code)]'>
            <groupfilter function='level-members' level='[product_code]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[sum:sales_qty:qk]' included-values='all' />
          <slices>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[sum:sales_qty:qk]</column>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (Product Code)]</column>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (Markets Name)]</column>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,YEAR(Cy Date))]</column>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,Month Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='19' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0gr9t901aaondo15r4ur21mfyspp].[sum:sales_qty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0gr9t901aaondo15r4ur21mfyspp].[sum:sales_qty:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='REVENUE'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions++ (sales)' name='federated.0gr9t901aaondo15r4ur21mfyspp' />
          </datasources>
          <datasource-dependencies datasource='federated.0gr9t901aaondo15r4ur21mfyspp'>
            <column caption='BLANK' datatype='string' name='[Calculation_140174580759797762]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='normalised amount' datatype='real' name='[Calculation_230528047621357568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &quot;USD&quot; then [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_230528047621357568]' derivation='Sum' name='[sum:Calculation_230528047621357568:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_140174580759797762]' member='&quot; &quot;' />
              <groupfilter function='member' level='[yr:cy_date:ok]' member='2017' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='142' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='60' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0gr9t901aaondo15r4ur21mfyspp].[sum:Calculation_230528047621357568:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='16'>Total sales</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-color' value='#1b1b1b' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='REVENUE BY MARKET'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions++ (sales)' name='federated.0gr9t901aaondo15r4ur21mfyspp' />
          </datasources>
          <datasource-dependencies datasource='federated.0gr9t901aaondo15r4ur21mfyspp'>
            <column caption='BLANK' datatype='string' name='[Calculation_140174580759797762]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='normalised amount' datatype='real' name='[Calculation_230528047621357568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &quot;USD&quot; then [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_230528047621357568]' derivation='Sum' name='[sum:Calculation_230528047621357568:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,Month Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_140174580759797762]' />
              <groupfilter function='level-members' level='[month_name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_140174580759797762]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (Product Code)]'>
            <groupfilter function='level-members' level='[product_code]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[none:markets_name:nk]' direction='DESC' using='[federated.0gr9t901aaondo15r4ur21mfyspp].[sum:Calculation_230528047621357568:qk]' />
          <slices>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,YEAR(Cy Date))]</column>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (Product Code)]</column>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,Month Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
            <format attr='text-format' field='[federated.0gr9t901aaondo15r4ur21mfyspp].[sum:Calculation_230528047621357568:qk]' value='c&quot;₹ &quot;#,##0,,.00M;&quot;₹ &quot;-#,##0,,.00M' />
            <format attr='text-format' data-class='subtotal' field='[federated.0gr9t901aaondo15r4ur21mfyspp].[sum:Calculation_230528047621357568:qk]' value='c#,##0,,.00M' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='color' value='#f28e2b' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0gr9t901aaondo15r4ur21mfyspp].[sum:Calculation_230528047621357568:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gr9t901aaondo15r4ur21mfyspp].[none:markets_name:nk]</rows>
        <cols>[federated.0gr9t901aaondo15r4ur21mfyspp].[sum:Calculation_230528047621357568:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='REVENUE BY YEAR'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions++ (sales)' name='federated.0gr9t901aaondo15r4ur21mfyspp' />
          </datasources>
          <datasource-dependencies datasource='federated.0gr9t901aaondo15r4ur21mfyspp'>
            <column caption='BLANK' datatype='string' name='[Calculation_140174580759797762]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='normalised amount' datatype='real' name='[Calculation_230528047621357568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &quot;USD&quot; then [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_230528047621357568]' derivation='Sum' name='[sum:Calculation_230528047621357568:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,Month Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_140174580759797762]' />
              <groupfilter function='level-members' level='[month_name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_140174580759797762]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (Product Code)]'>
            <groupfilter function='level-members' level='[product_code]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[mn:cy_date:ok]' direction='DESC' using='[federated.0gr9t901aaondo15r4ur21mfyspp].[sum:Calculation_230528047621357568:qk]' />
          <slices>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (Product Code)]</column>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (Markets Name)]</column>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,YEAR(Cy Date))]</column>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,Month Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' data-class='subtotal' field='[federated.0gr9t901aaondo15r4ur21mfyspp].[sum:Calculation_230528047621357568:qk]' value='c&quot;₹ &quot;#,##0,,.00M' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0gr9t901aaondo15r4ur21mfyspp].[sum:Calculation_230528047621357568:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gr9t901aaondo15r4ur21mfyspp].[sum:Calculation_230528047621357568:qk]</rows>
        <cols>([federated.0gr9t901aaondo15r4ur21mfyspp].[yr:cy_date:ok] / [federated.0gr9t901aaondo15r4ur21mfyspp].[mn:cy_date:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='SALES QUANTITY'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions++ (sales)' name='federated.0gr9t901aaondo15r4ur21mfyspp' />
          </datasources>
          <datasource-dependencies datasource='federated.0gr9t901aaondo15r4ur21mfyspp'>
            <column caption='BLANK' datatype='string' name='[Calculation_140174580759797762]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,Month Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_140174580759797762]' />
              <groupfilter function='level-members' level='[month_name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_140174580759797762]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (Product Code)]'>
            <groupfilter function='level-members' level='[product_code]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[none:markets_name:nk]' direction='DESC' using='[federated.0gr9t901aaondo15r4ur21mfyspp].[sum:sales_qty:qk]' />
          <slices>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (Product Code)]</column>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (Markets Name)]</column>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,YEAR(Cy Date))]</column>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,Month Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0gr9t901aaondo15r4ur21mfyspp].[sum:sales_qty:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gr9t901aaondo15r4ur21mfyspp].[none:markets_name:nk]</rows>
        <cols>[federated.0gr9t901aaondo15r4ur21mfyspp].[sum:sales_qty:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='TOP 5 CUSTOMERS'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions++ (sales)' name='federated.0gr9t901aaondo15r4ur21mfyspp' />
          </datasources>
          <datasource-dependencies datasource='federated.0gr9t901aaondo15r4ur21mfyspp'>
            <column caption='BLANK' datatype='string' name='[Calculation_140174580759797762]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='normalised amount' datatype='real' name='[Calculation_230528047621357568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &quot;USD&quot; then [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_230528047621357568]' derivation='Sum' name='[sum:Calculation_230528047621357568:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,Month Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_140174580759797762]' />
              <groupfilter function='level-members' level='[month_name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_140174580759797762]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (Product Code)]'>
            <groupfilter function='level-members' level='[product_code]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[none:custmer_name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_230528047621357568])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:custmer_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[none:custmer_name:nk]' direction='DESC' using='[federated.0gr9t901aaondo15r4ur21mfyspp].[sum:Calculation_230528047621357568:qk]' />
          <slices>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[none:custmer_name:nk]</column>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (Product Code)]</column>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (Markets Name)]</column>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,YEAR(Cy Date))]</column>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,Month Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
            <format attr='text-format' data-class='subtotal' field='[federated.0gr9t901aaondo15r4ur21mfyspp].[sum:Calculation_230528047621357568:qk]' value='c&quot;₹ &quot;#,##0.00;&quot;₹ &quot;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0gr9t901aaondo15r4ur21mfyspp].[sum:Calculation_230528047621357568:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gr9t901aaondo15r4ur21mfyspp].[none:custmer_name:nk]</rows>
        <cols>[federated.0gr9t901aaondo15r4ur21mfyspp].[sum:Calculation_230528047621357568:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='TOP 5 PRODUCT'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions++ (sales)' name='federated.0gr9t901aaondo15r4ur21mfyspp' />
          </datasources>
          <datasource-dependencies datasource='federated.0gr9t901aaondo15r4ur21mfyspp'>
            <column caption='BLANK' datatype='string' name='[Calculation_140174580759797762]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='normalised amount' datatype='real' name='[Calculation_230528047621357568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &quot;USD&quot; then [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
            <column-instance column='[product_code]' derivation='None' name='[none:product_code:nk]' pivot='key' type='nominal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_230528047621357568]' derivation='Sum' name='[sum:Calculation_230528047621357568:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,Month Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_140174580759797762]' />
              <groupfilter function='level-members' level='[month_name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_140174580759797762]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[none:product_code:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_230528047621357568])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:product_code:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[none:product_code:nk]' direction='DESC' using='[federated.0gr9t901aaondo15r4ur21mfyspp].[sum:Calculation_230528047621357568:qk]' />
          <slices>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[none:product_code:nk]</column>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (Markets Name)]</column>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,YEAR(Cy Date))]</column>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,Month Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0gr9t901aaondo15r4ur21mfyspp].[sum:Calculation_230528047621357568:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0gr9t901aaondo15r4ur21mfyspp].[sum:Calculation_230528047621357568:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#b4b4b4' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gr9t901aaondo15r4ur21mfyspp].[none:product_code:nk]</rows>
        <cols>[federated.0gr9t901aaondo15r4ur21mfyspp].[sum:Calculation_230528047621357568:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='YEAR'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions++ (sales)' name='federated.0gr9t901aaondo15r4ur21mfyspp' />
          </datasources>
          <datasource-dependencies datasource='federated.0gr9t901aaondo15r4ur21mfyspp'>
            <column caption='BLANK' datatype='string' name='[Calculation_140174580759797762]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_140174580759797762]' derivation='None' name='[none:Calculation_140174580759797762:nk]' pivot='key' type='nominal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,Month Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_140174580759797762]' />
              <groupfilter function='level-members' level='[month_name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (Product Code)]'>
            <groupfilter function='level-members' level='[product_code]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (Product Code)]</column>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (Markets Name)]</column>
            <column>[federated.0gr9t901aaondo15r4ur21mfyspp].[Action (BLANK,Month Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='5' />
            <format attr='color' value='#f28e2b' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0gr9t901aaondo15r4ur21mfyspp].[yr:cy_date:ok]' value='10' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0gr9t901aaondo15r4ur21mfyspp].[none:Calculation_140174580759797762:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0gr9t901aaondo15r4ur21mfyspp].[yr:cy_date:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='DASHBOARD'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='15875' id='1' name='QUANTITY' w='12900' x='3300' y='4125'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='9000' id='2' name='YEAR' w='27700' x='39500' y='1750'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='12875' id='3' name='MONTH' w='79400' x='14100' y='8375'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='69250' id='4' name='REVENUE BY MARKET' w='33300' x='2200' y='21125'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='53250' id='5' name='SALES QUANTITY' w='32000' x='36400' y='21625'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='35250' id='6' name='TOP 5 CUSTOMERS' w='33300' x='66900' y='21250'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='30875' id='7' name='TOP 5 PRODUCT' w='33300' x='67600' y='55125'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='24750' id='8' name='REVENUE BY YEAR' w='33000' x='40600' y='75000'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='REVENUE'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gr9t901aaondo15r4ur21mfyspp].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='QUANTITY'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='REVENUE BY MARKET'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gr9t901aaondo15r4ur21mfyspp].[none:markets_code:nk]</field>
            <field>[federated.0gr9t901aaondo15r4ur21mfyspp].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='SALES QUANTITY'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gr9t901aaondo15r4ur21mfyspp].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='TOP 5 CUSTOMERS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gr9t901aaondo15r4ur21mfyspp].[none:custmer_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='TOP 5 PRODUCT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gr9t901aaondo15r4ur21mfyspp].[none:product_code:nk]</field>
            <field>[federated.0gr9t901aaondo15r4ur21mfyspp].[none:product_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='REVENUE BY YEAR'>
      <cards>
        <edge name='left'>
          <strip size='121'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gr9t901aaondo15r4ur21mfyspp].[yr:cy_date:ok]</field>
            <field>[federated.0gr9t901aaondo15r4ur21mfyspp].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='YEAR'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gr9t901aaondo15r4ur21mfyspp].[none:Calculation_140174580759797762:nk]</field>
            <field>[federated.0gr9t901aaondo15r4ur21mfyspp].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='MONTH'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0gr9t901aaondo15r4ur21mfyspp].[none:month_name:nk]</field>
                  </x-fields>
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0gr9t901aaondo15r4ur21mfyspp].[none:month_name:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;December&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0gr9t901aaondo15r4ur21mfyspp].[none:Calculation_140174580759797762:nk]</field>
            <field>[federated.0gr9t901aaondo15r4ur21mfyspp].[none:month_name:nk]</field>
            <field>[federated.0gr9t901aaondo15r4ur21mfyspp].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='DASHBOARD'>
      <viewpoints>
        <viewpoint name='MONTH' />
        <viewpoint name='QUANTITY' />
        <viewpoint name='REVENUE BY MARKET' />
        <viewpoint name='REVENUE BY YEAR'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SALES QUANTITY' />
        <viewpoint name='TOP 5 CUSTOMERS' />
        <viewpoint name='TOP 5 PRODUCT' />
        <viewpoint name='YEAR' />
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='DASHBOARD' width='192'>
      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
      BQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='54' name='MONTH' width='192'>
      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
      0iQAQmn/A9Ts500sQ3SBAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='23' name='QUANTITY' width='84'>
      iVBORw0KGgoAAAANSUhEUgAAAFQAAAAXCAYAAACVp2gDAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADaklEQVRYhe2ZX2gTWRTGP91AQRf0QUWK9CFP4sNSZKDBCBWSh6CFqEVFrUqVBm1IQaOk
      UhndiljBCg1UNoEWKjRiWlREidCqfajaFm2rWEVrav3T9I/CBkwhZQKfD7OsM5OkURijyPwg
      D3PPd8+9fHPunQNZQJIw0I2FP3sDvxuGoTpjGKozhqE6YxiqM4ahOmMYqjOGoTpjGKozhqE6
      YxiqM4ahOmMYqjP5NTT1CQPBGjhLLRAEC0qdPlz/kPo/HB/0Y3+pBYJgRVlNCK9S2RLNYWq4
      E02eCoxpxsdvnUSFzQpBEGC1VcE/GM+SYhy3TlbAZhUgCFbYqvz4Kk1h9vVdBMWDcJbWolsz
      dSy4HYIgKH4KDfPI25ZDrGq6w9GERDLJyfvnuK2yndMk+bmLPmcNO94kSekj+xt3ckvTSOZE
      XSLLj7Xx/uQIo8rxeyLL6zo4NJkkKTExepnustN8mCHFPbGcdR1DlKUJjl52s+z0f8poCw/t
      O8ubowlGfD52aefW7WHL28xby6uhkiRpRl6y2RtglOTna27uaZtQiHt5alsjn8ybMao2VJKo
      XkFixJtuSMa9SBF6fenKrjRDp9lemTknSeb1yJtMJsVTCh+uB/BsjR1mADMzQHFxoUJcgpKi
      GGJZj33GBaBcIT7ox43FDlhy7iWOQf8NLHZkUmqZwtQiM8zZwvMWwA9A+hiheEBk5L26QqIB
      NxtV5Sgx4vUyoi1q9Sx1hZJkcoQBj4eBx//m3EtyJECPJ8D5pOkVqsrA+Iub9DmreGVaHsnz
      R6kP58Ux7Gj+G45VJlVoxQpgeDim0Paj/10hCk34DmIIHQ+hSLwA19qlOaQhHA8VQbzgQi5p
      dgqwZPUmuDYm8PS5PJJXQ2fCIcztdmFNQXrsT/tmFF49h87xObkb8DfjyXoH/vqeBfpa0Vtc
      Dcey3G+hr7UXxdUOfINUTc95VAcfYGI2Bbkb6ETT1eUoEeTwAjJ/f9L1nLDg6G3tpWhHw6MG
      2CHfeUcOh/B09g+stB3DP2c2Qy7kGC7t3YtYTTdqBblt2R5UNkxmuMJhOHp2YevFV5r8csxl
      VuZ4h9ZdW5EudSEcdsHcXQuhVtssAfaGR2jY8AkDrfU40z6AidkUClauw776+q8nIudF8ysw
      0cZK9zXmvhV/cI5v4AteR7mtwkP6GAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='33' name='REVENUE' width='146'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='REVENUE BY MARKET' width='192'>
      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
      OtcMAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='REVENUE BY YEAR' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d3Bcx5Xw+5scEQY55xwIAmACQYI5k5JIirJkSY7yrr3+dr3rV+Xa3frq
      PderV/u+zfW88Vt7tfbKSpYoiZSYcw4gQEQiEDnnMJjB5LnvDxDgzAAkAXEYTMyvikXM7b63
      z719z+3u0+d0iwRBEPDhY5EiftYC+PDxLPEpgI9FjU8BfCxqfArgY1HjUwAfTxmBvvYmGpo7
      cDg9j9+lsrqGiUnrU5PGpwA+nir99Tc4Xd4GDgs2h2uKncvnzmCzWbjb3uR2zhdfffnE5JE+
      sSv78DEH9XfaWFaym/QQDUd/+ysyNm+jrLSZ/buLkSk1pGcXcKFhGNuJjzl+9Q5rNu/gyqWL
      BEUmM1R1itqOUTa+9ocUZ0Z6RR5fC+DjqRIZpqWppRezyUjJ5tV8+fERkjOyEIum0u0WPRHK
      HhrbDBRmxGCRhpCVmcnq/AQ6egxs2bGTKJ3Ka/L4FMDHUyW1aCuRljYu3LyDQxWBSi4mLTEU
      kBAfE8aZ0xeICY4nLzceRVgKGXHBrFmaxrWKLvbu20ZPdy9iicRr8oh8M8E+nhUDHY2YlBHE
      h/k/MxmeiQJMTk6iVquf2PUdDgd2ux2FQvHEyvAxP550XT8uz6QLZDAYnuj17XY7JpPpiZbh
      Y3486bp+XHxjAB+LmufLDGozUVZezqjeTEpuDl21lRgcMlasXkZ31Q1s4UvIDHFy63Y9o8MD
      5G18hXid/FlL/diYx3u5frsBi0VMfmEi1bcbEKl0LMuKorayktjC7cgGa6juGESkCGTT6vxn
      LfILw/PVAkiVFKxYRVJcBCrzIP6pRazNjWfY6CQ3LxeVXIIqIIK169aQkJxF7Avw8gMo/CMo
      XllAZEQIRv04eas3kBosxqaJJCc9HgEQS6RoNBr8NN4zAfp43hQAB811dQRGpxAWHIDdYsZq
      dSCViNxyjXW14BeT+LwJ/7WxWya429pLWlY6ckTYbXasNgGpyw2OG0wkpqRhM008O0FfQJ6r
      LpDTrKe9p5eugRGSc5YgH6ulyq5kWX44N65UMmgT4a8pxmaTEhv9/FoWFsrkcA/tXb0MjYyR
      m5tKXeU1FMFxhIy0U1rdjFU9SX58APXVlSgCI561uC8Uz8QMOjAwQFhY2BO7vsViwWQyERgY
      +MTK8DE/nnRdPy7PpAWw2+1P1Dxms9mwWCzPvQluMfC818Mz6wKJxU+uBy8WixGJRE+0DB/z
      43mvh8dWAMvEIGUVdSh0UeQk6LhZXoVcE0FGrIaOCQm5ydG03ClDEZ5FpG5qZlYikTzRWVqR
      SITT6fTNBD8HyGSy57oeHlsBpAp/CleuoupmGSNjUhKyC4gNDmC4sZHBiQlszmC6e3oIUScT
      EThlthQEgSc59Ji+vs/N6dnzvNfDYyuARCKiprwMh8oPlUpGVVU5LTItqSEBRIaoaK1rISAm
      7l7eKS8+sViMVPrkel8Oh+OJl+Fjfjzv9fDYnbPx4QHEKj8cEyPorQKBISHIRA7sAgQEhdPS
      1Utk4ItjsvTxYvHYqqnVhRIlVhKfkIxWJcVPrkSW4odKKgaphHVrVyNXSAlwPr8DIR+Ll8fv
      AskUBIfcH+TogkPc0lXqqal7L8Yw+PDhNXyfZQQm9cM0Nbdhdo/S9rEIeH5HJ0+J5iuHuNwv
      0NPYRYjWzoqXvkNenO5Zi+XjKbHoW4DJUT3qoAD8QmPYvjGfrvaBZy2Sj6fIom8BMrfsR9bc
      xtrcVFrrR9m4MvlZi+TjKbLoFaC59DSHbg9RkKnkqy+7ic1IJCbY71mL5eMpsei7QGmrd/LK
      2kxGx40kpOX4Xv5FxqJvAUZ6+olbuhqtUswlyQRGqxONfNF/FxYNi76mS7/8kl4mOXq6mpQg
      I+dvtTxrkXw8RRZ9C5C4JJnyI8cwKYLwVymx+/tMoIuJRa8A6cVbSb/3t3Gsm67KFmwpQcg8
      4pB9vJgsegUAAYfdjtVmR64NY2m6FJvgRIbPd2MxsOgVYKy1nM+uthMX7s9wXx8rduwjSOp7
      +RcLjz0IdjrsWG02nIKA4HRgs9kQBHDY7VOBEIKA3f78+tjUXb9J2rotlJSUsCRJS019z7MW
      ycdT5LFbgLaGKnpHxlHoElGZuhnUm4hILWC06jShq14iXjLAf5+o5fvf2OENeb1Owe5XOX32
      NKdlcpCHsnVDyrMWycdT5LEVIDIqiu4hAzo/OUZxKOvyE6m600BwQgoT3R10ya3ERQcBU6tB
      wFTEltX65PaBstvt8y7j8sFP6fELISksieLCTEQOK9bnt8H6veNJ1/Xj8vjxAKpACpdmUNPY
      i0wmwWY3IyADsQS1c4JRmxZ/lWwq772gAIlEgkwme9yiH4ggCPMuwzYpsPFb+wnobuDI4SPk
      Fa8nOcK3npC3eNJ1/bh4oQtUSe+ohejkLDTWAa5eryC7YCW28QG0MgXdZn8CHFMPQCS6b1p0
      /ftJMZ8yMoqL0YnFaMLiWLMhirAg/6ci22LieX6ej60AaUtWkjbzK4TIpHt/+sUA4H/v+LNB
      wG63I5FIH1gJLeXlJOdlcfi/foOfTklwzk7WZvuWH1wsvOCuEHa++M9/44uTZ2npGWGuxTmU
      GjG1N6/QZ9KSnRKB0WB+6lL6eHa84PMAAhanmi3FhXRUllN2xcyWV7YRKLtv51+593VGR0cp
      TFqKRmonWh30DOX18bR5wVsACVn5efhrA1lSsJxtOzYSIHW/ZYlMQUhYBOEhgUhEFk4ePY3R
      Fxu8aHjBWwDQD7Zy/KtBxjqq6LLE8id//Dr+LjO9w2112MPS6bxxjJYRK6tLtiD3+QEtGl7w
      FkBMbv5SLBN6wmMSyFtegJ/E/ZZrL5yjyzLC7fpRClO1lN/pQvYcL+bqw7u84DUtQheZyNbt
      W1E5bMgVUvCwBq185RUajxxl3DhIeZOJosKkB1zLx4vIC94FcnDso19j1/rR0CsmsPsUg7kJ
      hCnvT8yYRgewSf3YdWAbkcpx7rb2EZob9wxl9vE0ecFbALDbHSjVUgRBhkxwYnW6G0Mrzl0m
      f9cu+mpv0NbdTWfv6DOS1Mez4AVvASRs3f8NeoaMLFsqoXdgDJ1EjABMd4RW7NrCne5RSjZu
      4MzxI0Sl+ZzhFhOLao8wfW8TN++OU1JSyIuxwerzj2+PsOeInuZuMlYUzbz8f/mXf8np06dn
      5XvnnXf4gz/4g6crnI9nwguuAA7OHPyAEWkgKomImrNX2LV0JTH3UpubmyktLZ111vbt25+u
      mD6eGS+4AkhITM8gLTKb2GA1iVrVrHmARzHae5erFV2UbCzBT+ELlXzReMGtQAJx6XmEasSY
      zWYmDUYcCxzyjHS3YJYouHryEF+dvMiY0TKrDIvZjNlspu7WLUastjmd7nw8nzz+LpHGMTq6
      h4iIS4DJIboHxgiOiAPTGAHhkchFdrp6RoiJDveCuAvFydnPfovRPwatVET1pVK2rN+6oCvI
      lVoiImMozl2NWd9PW/8IgUmRLjnG+Nf/95+ILVzOndPHKPjOH7G9IONFb1pfGB5aT06nE5FI
      9NCAhsHBQdRqGY2NLWjsYygj41DKpTRVlDIobCJB0s+5W228/UwUQEJ24QpEQUlEBalJDPBD
      I1tYN0ahVtFw6QbpCeEE+4WR4e/5LHR87398l8uXryFShJDve/l/r3hoXX3wwQcUFRWRnPzg
      JcOjYuJob2kiMiqG/vpu+pqakGfnowlPZnKwjW65QFzYVFiM/d5KEU86TtRms90rw0JncyOt
      5Y0sL9nI+NAggtmCVTTVSXE6nXOe73Q6Z+Qb6e8jPDGF2+e/wijSkLu0kNiwAJfcZsYm5Wza
      vAmTwcxIex+hkT6X6mleiJjgyspK8vLy5kxrb24mMDoZnVqGImspfkqBW7UthGil+Esm6LcF
      oZLbpgq7t12mRCJBLn9ylnhBmIoEk8sltLUNsPlb36b0xEnsA4MoJdKZsh+0g7lYLJ7J46cL
      JVQIY0VJPlbTOIN6p4fsXRw92sj6lAnkaTlcPXqS1B99C+UTu7sngYB+dBRVgA6Z2LuesE+6
      rh+XeQ2CDx06hMViwWg0zkqzTI5Rees61c092A2D3Lh9l+zcTELCwoiMSyQ+Kpy4mGivCz4/
      JKzbuh67WWDz1hIETQAh8oV1UGRKNRqljPaKC7z/uy/oHvMcBOsIkA1y5mYryfHhBIboeP5C
      wO2c+vxDvjpxnnGznatHjzLmlu7k81/+C787/BnnrlUyZjAvmoH8vN+G+vp62traePnll92O
      Z+SvJsPld/i0H5kyGICpPSKf1Zr7IiITp6VTs7o4i9a7XYRlJzDf79zEUCeNBic01LLtrW18
      8VElK9JdY4ZFBATqKNm7l+ggNRn7dj2HiypO0NDt4LuvJ3D20g3MbW14dmoVfuFse2U/9q67
      3Lx4mcKN6whWuqqywOjICP66YHBYsNhEqFXP75d9vjxUAfbt24dcLufP/uzPUCqVpKenPyz7
      c4iAST9C76iZ+LhoJFINof4KbDBvV4iYjJWMVFXTHhyPXG9nZclSjxwjNLYa0AVf4abezso1
      JUQF+81bwQD675ZxpqyD4EA5vUMGdr2yl1CtN1+uQIqXJUFgPMWZZr7qCsV963IRKzeuRw1M
      iKSkLFmCTuH+ajSc+phrlhAiNP4sS5NwsUrMvh35XpTx2fDQLpBarUYqleLn54dMJkOp/P3q
      2YKDLz/4gK6eZs5er6X63DkmdboF+QEptDqWry7h1Vd3ERIZy0DlVXrGTS455ETGRrN6wzZe
      3rGBsb4eFhpQWXbxOqu2LuFG9SgFUXLqOwYXeIVH4aCjuYFzxw5xtrwFsUJ2r2WeRuDG2fNM
      MsZ77x/lyuFPaNO7Lw7gdDqITSsgM8TBhetVTL4gYaOPGAMIOJ0j3LhSj8M+yvXr9U9HKq8h
      JiDIn6iUZcTJh7hQWr/gvq0gOBkfHcVms9LeOsDGl/YQqnHtGkSxd+8qACRyORM9d2npHZv7
      Yg9g+YbVXDlSxqq8UBrHxGTEhi5Qykehp3tcRWqggDQkFdl4L3q3dBFBQXLOHvoUUXA6ukAN
      Mg/Td8amvcQIo4SnZBMYEM/Wkkwvy/hseMQYwMalI4f56nw71XciySre6dXC7VYzTrEcufRJ
      TUiLWL62hJauVnLz1/GHgdFTUWELYKDxBgevNGHrbyN7VT4nb3bzg28Uu+QQIxHZMFvt2Izj
      5K3bjt3qOVB+OE6HA7FMgs1mw24XkHg9JjmI9etziY6JJhwxNc483LcBEbFy8y5UgSHU3zxL
      vyOXCI3CLUfdyYOUiiL46KODbFgVy43aAfYUJ3pZzqfPI94GOev2vIHF+gV6QYLU6d1mr/rM
      YW6OCqQmpLJmZf6cwehOm5nu7l7kfsGEBfsvqG8Ndk4eOkrm+rWcPl+KtruGkPAYdLL5K4Hg
      dBKRuITomHDS8qNpOjrkkcPEb//z12g0YNPEYLGK+dYbuxYk5e3L18h/5Ydk6aRcP/Ih9Z3D
      rE735uJcdppvX6ezPxUVZpr7rKzCtfKdnPj0E9Z/9xXO3xgkLbid5qwMMoI0MzkUGhWGzhHk
      Cjl6gwmp7vkb6n8d5vEmmJl06ti+YzVSueLR2ReA2WBl+ebdJNiHOHb4c5Lz1pCTdN933Dze
      xX/81yHWbFzHZP0tTtiieXvP6gUogZSYuHC0wSksEWr54GQHL+9bmIwhSflsjAGJJZgrl26x
      eeMmjxxGDBYVIbJR/Jck037tFjZYkCVo3d79HDv1OQ0SAbMonH0p3p41N9E5ZOfljWlIcFBX
      dQgTrrY5MYXLM/ni/VMMj7TRE5zFGq37eC+pZC/fNpqQy6UM9XdgdKjwxGa1IJbKmDQaUWu0
      SLw8p/AkmIcCyDCNtnD48BAJ2UWszvNes5ewdBlSPzVBqlgKlvkRE+Pe93U67UgkMmwWM06J
      BIdxoTOKItbs3I8ggCh0OT/7q0KEBa5T2V13jcqJSMSNZ4nftIrTJ0tJ+dZGlxwh7Ny6BKNE
      S2v5NfI3bF7wJFhLXS3ygCDElnZKb46yeUsxoVpvGhz8eOPAZmqamxHjpHjXS6hdw+IQkVyw
      gaSlDqw2J4aBZmob2lmRmzSTpedOOZW9ehQimBi6i161jNSE+/U1OdTGp8euILEbkKk0yCPz
      eWVdthfv4ckwDwVQsucbb+AAZIrZWv84WI29HP6wjKgwgePH6vmTP/8z0mODZ9JVAbFsWV+A
      WepPTMwKEhwLMw3+4he/QK/Xzzr+xhtvPNS9w5WIhEzOfvwFA93ddJ6rITN/o0eOIS7e7KE4
      yY4lLImqa1dZmnFgQZNhUfGJVJy6QkJmFAlJcoLU3rev66KSWRs1dc8tlVe5VmFidX6qmxVE
      JJYgEdlQ6qKIF0+6mYsD1RbMigTWF0Yy1qfmeqP7q6Mf6UMelIC59iz539zH+VOd8GIogJWa
      sluMjnczrsnj9a1zu0R8HeJyi8gdOYtesJKYluf28gMYhho4eaWR5AgloZtWc/i35/nhj16b
      9/X/9m//lq6urlnHly1bNm8FkPuFsHLVCnoHU5Ep/VmSHumRQ41jopWyagvWRA1ShcKji+bE
      aDCh1qgf6FSoi0rhzW8lUHbpOIlpETgcAgsMW3gkQ13N1DY2YxXkpOcWsOaef9a0jDfPnSG1
      eA2HfvWfCCodL33jNTdzsSZxDfvuNf7SyHTiRnqwOYSZzQTDk5cS0Xwcv12vMdLQzoaNy7x7
      AzgYGRzG5hRovH6diDXrSA4OfGx//nmc78QwPs6E2YbD7GWnJrGCVeu3syIrmaBgfzzDk2UK
      LVqtlo1bN1B+5hi945PeLX8e9DWWUtZqoGDZclLCrHxy+LpHDilbdu5k6YYdrEhNYf++HR5f
      FSPv/fM/8cnnh6hu6cf5oHgEkZTCkt0UpWs4fvwCprlzfU0mOPjFeeQOPUZBydGPP8TTqaW3
      tZG+sX4skkhCJSbGLDa3dEEQZv5JZGpCA9WYHfeNIvq+Zu72T9Ld0snyDXmUXrjlUYLAlZNf
      cPrcWb48+CnHLlcu0CQ9ye/+49+4WF5H+dWrNPcNM7cr44MRBAGn04nT6WSwvZrSms75KIAC
      hcKB0SQmd4l3zV4dlWf5u1/8B1fKKym7dom73SPuJfvHsHVNJteu3yYiYTn/xx+/7tXy50Ng
      eBy2wSauXr3Kxat1pGUmeOTo4t//vw+prW/CaLEjlXgOfwVkATG8vPclpKONHD50etbLZxgd
      wmQXaLx9hRv1g2zZvh7vdjaV6LTQ3q8nJT2DxGjPeQYxu15/gztnr6CSjyFLWUlSoPtcce25
      s/Q7nVw+dpAPP/oEszoUPxe/KpvVhF9oIusKYjhz7hqDYwaPMvqpuGtH1d+AKnsl/VWlLOxz
      5scf/vlfECUZZ8KmJDM7ecFu53VnP+M3nx/h2LFjHD16go7hifkogJ6eMT++/Y2N1FXcXWCR
      DyduSQm71+ZgszmJTVlCWox7F8g43MSx89W03K7A7Ojn4NFrXi1/PqiCYvneO99jy6ZNHHj7
      OxQkBs/KE5u5jH2v7CJQYqS0tBK7W6qSkg2rkYrEZBaupWRlziwL0flPP6LPPsKJi81oDa3c
      bhnw8l3IWF6YgUgZRFfNFYIylqFxSxe4ee4kglSKwamko+Ymg5PurX1fUx09E0M0tptYvyqB
      qupWt/Tg+DzW5sUwalWSmZDFnj3FuBNKaoSFAVUkprsV6JIzF6jkdhqbOli2YjnRaeHUXate
      8KRmYl4ueblF7Nq1iz0v7SIpPGA+ChBISrSDDz6/QuGqnAUW+XBEYhlZBcXs3rqbl3YupaW5
      E7vLwlVSmQbsegwSNUtzctA8o0gTQXBOxRgIDsounqNj2PXrFs2rrxYhEktJzsxj1fIcJG41
      I0awjVNRXk55eTkf/tu79Htcf1nJck789hADw200DNpIjvT2bvV6vjxTzysv7WTjps1UnfrC
      YyZYYHBgjNSMcMaMCsLlAmNW9y7Q6gMHMFdVE5GayPi4iJXLM9zSDYOtHDlxkYPv/5ab18/T
      0DvuIcMwLa3jxCTlsGnrdl7autrj5XMyOjyK0+mg+W4DIwbPycRRThy/QXNlGXHF2+kvv4Jn
      G/MoJgxObPp2ysuP8i/vXiM2Omg+CmBjZFiPRCJicMBzEsgLiETI1UFkpMQxPtiL3mWcoQyI
      5q1vvso7P3oHjUJHvE7MqMn+kIt5H/NYN598+gX//s//xO/e/5CA7JXEBWtdcigIDZ0OkHFS
      efk0Va19LukiaituowoMITw8nADN7LkUqTaMb779bbavySMwNBKV3L2NsJom6O7spLOzno8/
      /oqxBW/ioaUwI4BDXx7l6JeHCEgv9GgBxGzcs4uJcT92LffHHJ5OUoB7F6izsoyQ/DXY+hq5
      29ZGT7+7u4d10oBU7Y9K6cf2V7fR29juIYMJpzqWUJmRsyeOcv12g0dLOckXv/uSMX0H3VeO
      8vFn5zzOD2VdoY5rtS3UXb9MzLI1aFkYDssEZaXl2KQypFIVKrl0PgpgZcKqZt26dWQkzJ6g
      GR/o4PKlK/SNTTI+0MGVq6UYbU6aaiox2J0IjknKKurmvLJ5qJWPfneQkyeP8eF7H6CKzyZI
      7f6CKNRa1AoJVouTjNwsnJanu4PLUGcTstAUwrUB7PjGOq6f8RzcOTlz+GNOnDrOwY8+oV8c
      Tnacax9bwsbt21BKZYjtBnJ278UzOuLGsSMMOIaoaJwkWjJKdZt7F2ik8w6/fv8z2rs7qKys
      Y9JsY2E4UISksntdPhMGIzjssyxVF0+eJ315EhevteLsbaTH4wssWEapbWhhUO8kMTqA4ZEJ
      t/Sg+CVsX53Fnre/hb80lE1rs9xac1CTnBxNQkYeW7duJTM5yuPlkxGqE3PqyHGsogi0AZ4u
      9E5GRyeIzykkOToY88SER7pwf2/qBxCZvozvvb0fQ2c3kSkJaBSy+SiAwNhADzU1NXQNzHby
      sqJg5fIcultaaOocZmlOPA31rVgnB2huH2Gsu5OW/rlbjrqrV4lbvpK623fYtD2PKxeq3dIt
      xj6Of3mcS5cu8L/+z/+b+lELwYEL1fvHIyq9kBBhgNiVJQQRwKqiLI8c/dR3SpF31xO6ooT+
      O1XY3HaaN3Pwo89pqz7DJ+ebuHH8KzyrrmjbBi797jhj+g7ujkvIinMfpEakreSnPzrASG8f
      AZEJRIUsNL7CyNVLt+jtbCEkvQhTa/UsZ7gArYhrl0sZnzRhczIrMixj2xsED9YTHB3OGNGs
      L3RfQFgklhIVn0xsuA6RRMZ4byu9o66dFBViSx+XLl3iF//Xz7ne3udhxZFRsm0H6zfvwx4Q
      zab1nm7ng9zplBA4Uo8jMoexu1Ue92Dl4K/+lS/PXKSjf2zO8cFISzkfHz6PQxaF0tZG15h5
      fgPpifFh+vu1qMNmr5sZ6K+m8W47KcmxdPYNotYGIxMNIPWLxmrsZVAKEYFTwx3PmOCUlSs4
      dOoSyTmZXLtQx7KiXW7xo07k2Cf76XRGEhYcQkRoALZ5xJdOxwQ/6Gtgt9uxWq3zigm2mS0E
      h0biQKDmbhUXL02QneLqp6MjNcqCXp6KuOom4elZiK1WXO9CKbXR2jWMUyxm3OwAt3QQS+Wo
      FHLS05IRKTRIRILbc+isvc7VpnF2btvH6nuyuyI4rJw78RWSgFCG27sIzy2iODfBJYeaPVuy
      uHCtCrOonayizag9ZFi+5RU62tuJ3R1OSHgUwXKRWzmtlw9z16wiWhdORpSTk+eq2LUp9/4F
      HBauXjxPfXMnmoBQNu3cQYhGzvCw4d51RMiY4G6XjeDAYKJiw3FYrS5KYOPMp79mQJNCz+1W
      QnKTCFG5Tif6k5UVTnreBpIlEi62R6FwuwcLRpuK4qVptFbf4OpZC1v2bsPPRZErL14mdfP3
      KAyVU3/1EBV3OuajAH58+4ffZ9RgRhM42023+nY5gdFJ2BwCdv0wdxsnEeQh4BgnRGai1RaK
      Ujp3THB72wBrXnqZoVunuDNsQ4TYLX5UkAWy88DbDLdX8dvWAIL9tMjdvkzC1KSRRITJMIFE
      6YdcKpqJCX7QxJNUOhUXPJ+YYHNfN5crW1i/IguQ4XAIHjGuDlau33GvIi2cOHwRh3yFS8CJ
      nG/+6CfY7YDDQl93B4ZxE4GhATPdkLPHj7N03x+RESDm5rGPqe4YodjFGW60q5fkpcu5deEE
      NnkQK1auICzwfi/eMNJMnykM/+bLZH//h1z++DwlhWlu1qbEnCISc4oA6GlpYMRoJVyndekK
      yUnNmJq5HWi+zemGDrauL5x5QSyTk6TmbyVqpIKb1d1MOlLdnkNvwy2GJTEES3pYszObzw9d
      5Y++s9UlJljO+pe+wbKBNj78cIAQtRK5TO6yXYOcvT/4KTXXz3C4UUd6csysuI3169fe+0sg
      LkjGnfYh8lOj7t2DiNzCJWhVWnILi1mtVc9a0aTkje9w7MhxTkjlCLJQNq+elylVzyf/9Wsk
      /iGE5axh9xp3P/CY+AQmTFZsTsjMzqR3aIKk2ChspkCkEghwSBA55/ZvH+powh4WS1vjMDv2
      5/Hl2TqWxK+6X/JgHTfqRKQpugiI8OPE6Vvs37rcpdKG+fzzGrauDOHTi7XgkPD2t1599C0t
      AP+YTPZujyUkRIeIeL7p72nFN/HBr99jyYpCwEJbZ/8cEzRipFJAqiIwwI+O4TEcoQEzD79w
      fQknvvqEBq0So0XFDo8Zca0uBGdAMKv37Mc8McSI2d0rV+UXh05UipCWR8uZiyTnZnv0bR2M
      jBgICpoarKvUSgbH9ITNKICTG6e+whaeRXFuMmHJ+WyJdh9r5W7bR9+Yk8iEtSia6hEHRrml
      B0Uk4rh9AXNAJCHKYLIz5/74aMMS+MFPvk/l5TP0hmVSmBYzk9ZUeY1eawDL1zpoaeknL8l1
      zGlnZGSSoCB/QET+2m1Y3FpCCYKpj/NHa6jrEqELDuR7b+1F5iKGRBHA7n0HACwa/70AACAA
      SURBVDCNd3Pq+Jn5KICUqKRkhkZ6MU3MnroIi4rHde3fhLipKXapeuobONWIze1FunTrLqpq
      aghKTkeYELF8tbvviNNhoaOtj8GBRjb8+DVOfFzucQUHvZ3t3JZ2k7BkDd2XjmJm/uGOj0Kv
      1zMyMjU5ZzTcN+v19VmJiJj+QmvZtHUTidnZyLAToA71KN/J9VOH6bdpUMnsDI45ef2Ae9xw
      aGIebyYsQRAEzIZRhsbGCVSHzCi6VO7k0rnzaNatISY8mCg/95dLLFWyefc+BEAQ9Bw7WomT
      bJcyhvnff/e/SS3MJTEjl+y0BNLc1kcSaG7sYmlCHJ8e/JyY5GwKl6S6+TOJZFoi733HQiMC
      OX7qOoG7N8+ssyRVqFFJQSEXcfjweTJWb5n1PAe6WphEiWmwC01SIUkRrqt3m7h8tY61q6Po
      bBvj6tnr5CW5xp/388//612yVi4hNSePjOQ4FArX98pOc0s/BRvSGUVN+Phtuh0OEsQuTt92
      M+2tbYxNmAgMi2Tn7s3zGQSr2fXqAV576x32bit4dPYFIJYpiIlPIS8zHoPTSOX1Grf0gLAl
      bCuOR5uchkwvZufOtR7WizC++cYG1BEpBAnDpBdv8mr4/bvvvktiYuKsf2+//bZbvrTs7Hsv
      i5Sc/FwPBZiktmmc/Hho1evQDHXgOc01OTGO3TnV9ZKIBfo6OnG1wYz1j5CxLJ+BpgqOHDlG
      c4/7Jh5WYz/v/fp9SktLuXWrjIa2Xo9BoEBgbBb79+0hgHEuX7iOpy0tKCycmNSlHNj/CjF+
      Yswe46P2qhtcKKvB4hBQaiPZs3M9rnFMg+21TKgSeOmlPby8bQlnT930KGGEDz48RfXJj6mb
      kHD6s8+xuHVB5SSlxhKcXERWSirh8TEe5wuEJuaxf+8ulOZBrlwuxX0kJGP9lrV0tTvYUBxP
      0rrNxErdzclVx39HWb+F0PBQ6q8c4XpD/8NbAIfdwujI+EyTrnRK8Peim+5w3VVOdMrIj9dh
      Mw9imHRv+m2TQ5w+X8pIfw9W6yCKmOVTVoaZHHq+OlHOlsJgzrYYMPdUkJuX9tQWPK2oqGDP
      nj2zjqvVahoaGqZ/UbAsk9CUPL4Zb+fKhVE8O4Sn3vslY1FJxEakUJSfyfJVIW6KrouMxRmo
      IzV5E3aLEYPV/Q7l6lCKS9aQlZuFzTyKSunp46Jjz561iEQSUrILUCqbPSQQs2HPzpnB+Uh7
      C5bQaPwD7r8ed6+Xo9i4npOHD6IOT2XN8hwULm4foYl5hN89weeff8bEuJEdO1/2KEOFWqJn
      0CpDNtiDoNB4vHwSSjZPLVvpzMhEcecYfRO5RPhNf05C2LAmmd6hcRQKBclZCR4etxYuX6hk
      6xvb+O2/fwCCmPAf/yGB0vtPMiA8jL6aOu6YdHQOTbLaT/VwBbBOjlF9+wo3y7vJyw5iSJTO
      W3u85+UXlVfMxjAzCbEhOOxJBEe4256t5jEcsgACFGNs2L+Dz/77OqxxnY1WIDb1Ulo5hFke
      iUgmf6qr/Vqt1jm9TdVq10kkM0NDJrAbOHzwEBaJbtYYQRBp2PLKPhRdDZw+cZqCkhKiXQa5
      yctWz/wtkTm58MUp1uzeSbBm6uWwmoYZmbDTVXqC083j6EKSPFpKgc67NbS1TeW/evw83/5/
      /qdL3ILA1SMfM6yIxF8u4s7Fq5TkFbnfU2AQUYnprE3JZLi7md7hCRJcujATwz1o45cSPlzF
      bYuIhqYeUiJcPU7l7H/rW9icUHPpAnH7djwwaGhkyM62/XuxuDlfWjh+7BzJ4Q70ESsZP/E+
      3/nJj1yMDSIcVj2VZReQ6nIJMddh9rACRqbmkW/vIsRfjkIdSFyo38MVQOUfzoZtO+hs+k8s
      NjsyjZfD4KRaEmLv2fUFJ9XltwiP3ob23kyoNjiVzUUOJiXLCRYHceDAFtz2N0LJ69/+Js2t
      naSKZEjFMkTwnC3qZOduXQOpGUokgTkEdN9iFHAd3q3Ytg0doIpJZ6MmCIuHL7QgCFhNejq6
      BgmPiWXPq7txuLziTruJmppGUI2ybMcOrh2+hYCrsUBKW2sbG/ftQwG03fIcS4nJyF+O3T+B
      2BANKSGByJTuHbnlL7+CWDxlYZMrnHS3DrkpgN00Rm39BNHGAVZuK+bs6S5Y4+ouYeT9f/1X
      Yos20nqrDHKWkRTs6otj4cjHv8OqCuTqyUp2//BN1uW4Ol/KUYiMDBqlMDGEDamHAsl5+c03
      GBoaJjM7DMNAJDqx+3ZYNw8fwpm/jA8OX2ZfSRzXKtvnMwhWkJociVEVRlyEd0P1LIYxrFIt
      xt4GKpsHWbOxBDFOpgMKRWIJCWnTA2MLpWdOkLluO7FB6pljVeU12O+ZVy8fO8e3f/7nz2wZ
      rrnx47VvbOLqlZsk561BGl+M51N02Ca4feMGEqCt8gbBRa+w2WWnyr7aS3xZNcR4ayNREUoi
      lr3Gprz7VhhVQAIvlQxxuWyS3iu17H55MyK3D4WEN773vZn8b/3pn8ySMjLpvgEiqWDFrPSO
      0pOc6xWIUImZGG7GqivG1d0tJGkZa8cuUXpHhf5WH988sN7jCv78j//5F1w6dZRaQUNGZpLH
      y6egqHgFZ6/XEh6VQX6Op+exim986w0aGtuwOUWkbt7kYVoRoVT7ERM3VftSvYMLl8tZv+7+
      dljhsWGYwtN57aVAZMYm/P2081GASWqq6rBph4i1+JOfHvXoU+ZJR+kZ6gPyMJZfJntJBCdK
      e3hza9pMutk4QPegCD/nMINOMVFZhYS6tUISxidN5OQtAcBQOPwAe9OzxE5dRTUO0SQXjp0g
      IS6etKW4+eI4JsdRh6YRpRWjESyIPFyRHYKS/PwcxoJ0rNmcwdVLI4BrPYiIzVzOG5nLARuX
      j59EVLSJ6AAlZrOZgwcPzinZ/v37USqVvP7663N25f7qr/6KkpISABJyMskJ1LIqJwLDSDM1
      bZ5mThGpBSWkFkzd89ioEaPTtTbM3Km5S0R0Aqs2aWgvryOiINPlBbTR3dlHYnYe4cFjc9Tj
      JL/7+AjRoXJE4al88dGnfPeHb7t04xy0NLYRnRTC9TM3ccq1rF630s0gERiXhdQyzMjkGJMT
      EhISHjEGmELNS2++RVNjM/F5qY/OvgBSSvYweOYYgxI5dwc17FwX75Zu0ndx7kIf6sF6iv5o
      ygyane6aR8rGLZvv/S0QqpPQeLeHnLjZLsvPDhFDw8OghIL1O7DUXcTTkychv2Tm77k2lFNo
      1PgrQ0B6h08/OEbm6lfc0p0OC5dOn6CqroWQ8HDyircQFTD1auj1et566605JduyZQtKpZKy
      sjKamppmpU+bgIeGhjAaZUT6WWhvbwekRAbD6OgoOt2U5+poTyPdk/4EWVo4cauJrBWbWJ7u
      h3HGG8LI+QtlpOoM2LM20nb9GvluCmChtKyJVeuVtBmNjI5MEBHk2paryM+JpX0Mtq5aRXdo
      kMcgWKD62hkGLXlUtwwRIDSTu3YFWpfeZHPpJexLlnPp3G12rgqlvm1oPgowysVTpZjEA3SP
      aXht76pHnzJPbBYL8VmFxGWBzdzG0WPlvHng/uArIGwJ20u0dPWFE+KQs2L5A9yxBSedLY3E
      LN2ASuJ4zsYAUl5561uMT1gIDNBiTnsJmUv35Gc/+xm1tbWzzvrxj3/Mzp1T6zCNdtylUSvD
      1DbM5t05fHW+iWUp97sppvE2WofVxCmVFLyyjq/eO0f6Hxzw2hqlP/3pT3nvvfdmHf/Zz37G
      X//1XwMwMdxFXY8ORXsFm9/cyZcfVrAy09XtL5hdW5YwLtIimRwjcft2j+UZxQSHhZOcs5KU
      pFHa+z0VQMTKjbtZCYBAv91AR/84CeHTM+pSduzfy5mLpWSkhhMRs4oAj7HUipf3c7W0njf2
      raN/RE9xXvx8FCCQoEAHuoQibBLvflmHXMygVtMAEx5mUKfDjH7CjNZPQXv7Xc6f6yQ/J8kl
      xzj//d/n2FwYzIVmK+ZTV3nzh99DZFnYwlRPGpFYRmCADIfdxlBHHfUjCtavzkUKXL9+nUuX
      Ls06Z/fu3TN/J6/eSs/pE/Q57Vy8PsqBlze75VX5xRKuqmBYHkekREvBMs+Z4CdPeFI+8eNV
      tPpHozTYKCyaHTuemDU9j+Sg9OwJ7sgUZM3MeqtYkhnCkQ//i45xOfsOeJpRBWw2G4IAnXdq
      UcclI3W4zojbOXbwMySh0YTGZjJy8xTtybGkuKwBJVUFUVIyZVELH2nn9OmLj1IAK00NLaj8
      QhgaGCIi0ZuLNUFU3mo2hJpJjAvFYU8iJMJ9esZhGufyzSo2bypGhBVhlvOaAiZ7uVUxhFke
      hUgmX+DCWU8DKzfOX8IiUdB66xL2hFW8uXfZgsL57t48z90xJyvWbiErPXH2Gv4SGcuLN+AE
      RsYGuVPZwLKCrKe6SrVUoSYpLZOENBAYovZWMyuzXSezHIwMjmAXBBpu3iS6eC2hctdOjIWL
      V2rZvCsX/4vtfPnFOX78fdc5lgl+9Xf/jC5jCc1nT5D25ju8sirPrb7tgpTla7fQcesMFfVt
      hHt0BSyTE4wbTMAIN2+OsHFtwcPrwW614XQ6kapUqJ0CigWurf9IpH4k3hu1S6QBJCcFuCUr
      /CN57dU9BAQGICKW77yV5HEBJa+//Q0uX7yMWKxh9c6pNXmer++/BD+FQFVDBxFhkSiT4xfs
      qmEYNZC7ei1qQw9HDt0mMbeYPBePVNvkEJ988hUFy5YAE/QNjT/1bqCxv4nPTlaTl5UIDDM4
      6ukzZeS3//LPU2bQS5cwJ2cRl+lan3Jys6K4eLGepSvWoNZ7jpT8efMH3+bKlas4RP4sW5Xn
      MQaQsn3fPkRyCZrMTByKSOI8ZoJby8/wWdkwG1YFcelSNytL8h+uADazgY7WtpkpZ61loYEY
      D+YnP/kJv/jFL2Ydf+edd/jlL3/J2NgYnZ2dANz7D4Dh4QHS0qYtRSb+699+Rd6mnYQK4/z6
      Pz/gx3/yHa/J6B0kZBVtInXpOAd/8xHRWgVOFrY9Z3hiGs7AAOITokjJLpyVLteEsnXrRhJS
      k5FgQiQ0PvUukF9kMhvWaklOiUeMEY3G0+Hjnhn05FFqnRoyZ5lBxeSv3U4+IBLZaKhpYtLm
      RC27fyf+IdFsf+lV8nLyGayswpy3xMUKZOPcFx/SJwrGOdDAgCSFJavycLEFk178Mt+PruZC
      2TXiUjMJ9X+EFUjlH87mnVv46v136R51IA9/evsDnDhxgtdfn70KRHZ2NjU10z5DAjKFnImx
      EayCGZlM4j5P9lzgZKi3hwmzjZXbtnHt888I/ekfE7uAK8TmuK7Db+DU0ZsUb9mARj71cghO
      B3KpmI7WVmCCssoGCld5b/2m+SASK0lNmbbQaciZZcefctpbt3MfeStWU33uEsEb1roFxgsO
      CyabBOPEGAJ2xiaMqGcGwpMc/fQoEj8/QODmpdv82E0BZGx6+QDXrl6jddyP5UWr8PNwdxeJ
      RIQnLuFAbCpNjXVUNPTMpys6weiYmOjYMCb6Z0eEOR02TBY7arUKm8mIwWRBqfFDZLcgV2uQ
      4GTCaMZPq5nj2o+Lir3ffAu7bZJbN25SsnUrCuD52pLNyZmjX5FQsBqNTIx+XL/g9WycNjMd
      Xb0E6gLobO9iybI8nE4b0162dtMoXx07w5qSVYgwMGEwPdUu0LvvvstPf/rTWceLior4zW9+
      c+/XBL/51/cJjosB7Ny6cZclbgpg4+Nf/RJZgJZAnYR2fRzfz1nicjUlDpGIkg0bkONksm9w
      ViunCghlw/bdZLU1Y/cLxikIiF3iAeouHObWiAidTMRQRz3a7J3zUQAdW/dtp+1uPbrk2Vrd
      19FKW98Ey4sKaKopZ1IeSExsIh2lxwnM30W8ZIBPz9Xz3Ve3PbqoBTPC+x+eZNfKECYDkik7
      8ilJf/Jjr7lDewcpW3a/jDIoDLVMQphWu+Bg7uZrJ7ihV9JbWcbG7Us5etnB9/bfbxXkmlBe
      eXkXYdGRSLDhp41/qgNgq9XK+LjnKhBgMLiGRPqRkpnO8g0bkGNDIzrr0Yd34pBo2LhpNQO3
      m2kyebrei9mzf//Mr73ffpu5EInERCSm0t9Yxsk6CZvXLp15yePTk9CPhrMyM5Shjniax+c1
      E2zm3OFD6EVyUlTxpEW7bwEalZiGyVwHODFMTDKpkKFQKgiMTcHY10633EbcvWU+XEMiHxWO
      aLfPvfqDILiGC2qI001w9EIb47IgIkJjkVqtXguJdDjmXg5+Ot1me/CYaFpGvV4PEhmT46NM
      AmKtlsmhIcRaLWKx+IEyuG4vKhKLCY5OIcVPTUKowO0OZoVFBocG47BacWClseIGTvVmogOV
      D5XRZrNhtVq/9nOalvFBz8lzS9zlxcUzHqfFWzZ4hIaK2P3qKyjVWrQr1YzcGZ85b2xsjHff
      fXfOMn7yk58gueeV2nDrAvVDEBHgpGPQwcs71ruFXUqD0sgPmnp2/hHp5EfMc5M8uX8Ya/Jy
      CAiZPUt5/25FZK1cg0JkobS2nhCtAq3IwLDNHz/l7JDIR4UjTuf1RCQSuYXivfTmH2K3WXEI
      YnDakMnk2LwUEimZtcqbe7pM9uAlcKdljIiImPMFqaioIC8v74EyuG4vmrJmD1PR2MmYDS1k
      ROIeOuqwU1ddhio0lqG2FpKWrSVUI32kjDKZDLlc/rWf07SMD3pOIpEIiURCX18ff/EXfzEr
      XSwWu0yw2akrr0VvFyFijMs39KxbPTXxqdfr5zwf4E//9E/vPQsLlVXtbNqRyXunjOQKXQzK
      5STemwf4h3/4B8rKymbf45xXdcOCyTi1YzxzPKjm2ls0dw0zjoIQqZG2Pj1pufmIzHo0Ui1i
      iwap48nuLSaVyZEi0HDrMsPyWArSPYMpfr/pbSjjUk0HaoUMwdnL3d4E1qy6b0Kc1DdzqbQT
      rf4o0Ttfp+z4RX7wzv6HXPHpMjo6ygcffDDruLsCiOnraidu5RYitHrKK24vsBQ5OfkZqELz
      eWefg9LLZiJcFPfixYscOnRo1lnz2h/APNHNrVs2EnOLiQ51t9UnZy8j2SWSMW7GXWhqonuq
      v/ukdk63ceTjjxACY1i7bi19vRMs3Z2E6DnemfzrEBLiR0BkNluLUhGcHXz6WY9bulQWQFhk
      CIVFB/CL8aM76PFXTX76iNm6/00ARKIw/vjHs1cgeRTpOXlYrFbEYhCPjtHnFEh8xGBoHgog
      InP5RlaveR63xJygdVDCdzYmcPbSTcxdXdhEot+zXdofjSw4jW33YmJEknheO+DuNKjQRrB3
      99TEmNM+RohG+Ryagx/OJ598Mmvcp9Pp2L59+zyv4OTsoY8RR6ShlYm4c6eJuIcskjXNPBRA
      oPHaMaoaq8kpWMOapZ6zsc8SHeuK0pAGJ7BhiZPPu0JeuJf/+PHjXLx4cdbx/Px8DhyYWuHA
      Yuzh/feOEhYTARgorTKwaVvx71Ur8N3vfhej0X32uKCgYAEKIKFw9TqkwbGE+CmJ9dPiN49N
      FuahABo27N7GnfZR0pM9F/V71jiJjI5muLcHUCIxj2GFBe3O8rxz7tw5/uZv/mbW8bfffntG
      AeSKIFKzs1m9tggJBiSist+rr7+3iEi4766fsHR+PZZ5fCTGuXazg7z0IC5crH509qeKjc8/
      PUhffz/9/f0MDI4seJLpRUAkVbJ2bdE927+WHbvWPdV5gOeBwsJCEhISZv27du3hS+rPKyBG
      LRvn2o0aQjLWeUlcb6Fkx65dhCUmIkcg+GtMMv2+U1ZWxj/+4z/OOh4eHs7f//3fPwOJng2d
      nZ0MDg7OOm42P3wx5XkogBhdgIr6XgMRoufv+xqTOD07LSL+npPc8+UN+mTp6uri/fffn3U8
      OTl5USnA12UeCmBg1BLKt7+1F7HkGe1QMQednZ0kJCTMmdbX1/fQCSAfPqaZxxhAhnm0mYMH
      D3Kz1nPTg2eH64Znnv98+Jgv8xoDvPb9Hzx5SXz4eAb8PpmKffjwOj4F8LGo8SmAj0WNTwF8
      LGp8CuBjUeNTAB+LmsdWgK7mO1y8UoZNcNJYcZ1TJ0/Q3Kfn+rHPaB+34jD08N8HT3pDVh8+
      vM5jT+3GJGdhsdaBw4pJrmPTpgKqaxsJio1lpKMT5GbCw6Y2SpgODXQ6nQ+MQ53e4fFBE1rT
      6Q+KQ50u50FhetPp8ynjcWR4UEyzpwwPeg5Op/OhMkynP0qGR6XPR4avK+P0ZOXXfU7Tz/lh
      eaaf46PSH3QPXvVtEJxOBMEJIjFItChsesZsSgJUU/Gr07GnnttXuiISiRCLxY9Mf1CcKvDQ
      86fT55PncdMfxvR9PCr9cZ/DfNIfty4elv6o+3zUc3rce3xU+Y+tAM21t6hr7mEMJaFSM+cv
      XCGjoBjHeB9+fiLazToCpGMzwk4L9TAe9+V7mIJNp3uj4r1RsU/q5ZsuYz4fggfxuEo6nefr
      fijm85zno2APk/GxFWBWTPD0rji6hKn/AGbtieLDx/OBzwrkY1HjUwAfixqfAvhY1PgUwMei
      xqcAPhY1PgXwsajxKYCPRY1PAXwsanwK4GNR41MAH4sanwL4WNT4FMDHosanAD4WNT4F8LGo
      8aoCmI16+vv7MZisGMbHsQsCCA7GxvTeLMaHD6/hRQUQaL1TTd/wKCaLnbqbp2keMGEZ7uSL
      M9e9V4wPH17EiyGRTgwGI0aLmJi4JAKiU5jsb6dLbicuMhDw7j7BD4sDtdvtiMXi52Kf4Acx
      vUfvo/bgfdzn9DzsE/ywunrYc5rvPTwsIuxR9+A9BRBEpC8rQiWxUVrbQIhWPrVPsDUArcL7
      +wQ/KH26HIlE8lzsE/wgpvfofdQevI/7nJ6HfYIfVlcPe04LuYcH8ah78GpQvH6gg4qecTLz
      ChBM46il/kisaqR2tTeL8eHDa3hPAURiYpKziUm+99t/ar/GqS2LdF4rxocPb+Izg/pY1PgU
      wMeixqcAPhY1PgXwsajxKYCPRY1PAXwsanwK4GNR41MAH4sanwL4WNT4FMDHosarCuCw2zAY
      J3EKYDGbcQoCCE5MJrM3i/Hhw2t4TwEEB3UVpVRVlFLfMcTtc1/SPGzGOtbJh1+d91oxPnx4
      E68pgOCwImhCKVpVjF3fR1B8Coaedrr6J4iPCvJWMT58eBWvKYBIJMZmMWO1GnEiB5ESjcjA
      iE2GVulVr2sfPryG995MiZxonZzrpTXkFq7AOj6IRqYGsxaZQ+G1Ynz48CZe/DSLCI9PJzw+
      feqnJgoAPwCCvVeMDx9eRCQ8KCD0CTAdE9zT00N7ezsdHR3AVOzndFheTEwMmZmZ9Pf3U1VV
      NStdq9VSVFSExWLh4sWLM+lwf/fJkpISBEGgtLQUs9k86xoFBQUEBwdTXV1NX1/frPTk5GSS
      kpLo6OigoaFhVnpwcDAFBQXo9Xpu3LgxK10ikbBx40YATp8+PSOfa56ioiK0Wi23bt1idHR0
      VnpmZiYxMTE0NTXR2to6Kz0qKors7GwGBwepqKiYla5WqykuLsZms3H+/Pk5n9P69euRyWRc
      uXKFycnJWddYunQpoaGh1NbW0tPTMys9ISGB1NRUuru7uXPnzqx0nU5HRsbUronXrl2blS4S
      idi8eTMAZ8+enYktns7j7+/PypUrMZlMXL58ec572Lx5MyKRiAsXLszEF7uWsWzZMnQ6HZWV
      lQwMDMyW4WkqwDQDAwOEhYXN/HYVCKYCnV3jQD3T7Xa7W8yv50OxWCyYTCYCAwPnTJ9PGV8n
      3bUMh8PhtoXn05JhIc9pOmjdNWbX2zLMVdeuMkxvmj4dV+yZ/qh7eNT5j5LxuRidegZlP+7v
      R13f85ggCPA4Zc7x0Ocjo1dl+Bq/n4YMDytvPtdY6D0s9Pcznwk2DrVR1z6MazvktoqAeYSy
      mja3dLcVH5x2Km9XTS3C9QDGetuoqq2jvrkDp1OYVcbkWD/VVVW0947gFAQEl/TJsQGqqqpm
      /vWPTs6W0WmjqfEONXWNmGwOBEGYtcFzdXk5Vg8ZXa8xPthFTXU13YP6qQlEj3TLaAc1LYMP
      fk6WMcpqWh78nASBu+WXOFtez+2KSuD+qg3TDHW3UlNTS/+oceZLOlOGIDDS20L3qAl9fwsd
      w6bZMpgGKLvTxQOrQnDQ1niHurp6OvqGgdmbdfe236W+pQur3Yngeg+2Se7UVs/Uw92OvjnP
      7+9sprqmlqHxydn3APS3NdA1ZJiRUfLzn//85w8Q94lhNBrRaDRTPxw2bpfdYsJoRKENQiX3
      WGJDgIbqWwzpjTglSgI0ylnXG+ys527HICa7iBCd38xaNErlVN6KimqyCwuJCAqY8wsikcrA
      aaW9pYm2niEiIiKQSqbyyRRqQsPCCA0JITQ0FK1qjmVERGJkEjH64T5ampowSf0J8XdfCcM0
      0s7tO10YLA7CQwJnySCVyXFYTbQ2N9HWN0xCTKR7Bqed22WlTBiNyLQ61IrZjffd6jIGxw04
      RAoCtCqPVIG79dXobVIsFhPJCXGzzpfLZVhMBlqaW+kZGic2ymWDc5uR0pvX6R6ZZNJgJDw6
      BrXM4/spQG3FTUYNRpBr8VPL3evabqK6uY/8pUsI9Jt7pRC5XEZ/VzttzY0IflEEqu7dp0RG
      cEgooaFT/4L8tYjFs+tSLpdhntTT3NzGwOgE0RFh7hlsBm6WVTNpMqENCHoOukASCSAiWCli
      wi5i1pSZRIS/QoRIoWHSbJnzEmq5jHFVMDbDKBB1P8HpoK25HqfDSkX5bWRyNUuz05B4PDj9
      UA8GQUvRmrWYjAakrvXqtDE2OkbfwNTXNzQ6kbBAj8qzm2jvGSQ5M59sqRO9efYiTFKpEpFK
      jMhqmPMeLCYjUr9Q1pSkMKGfYylJiQSxSEyQUsSETUyIZ7pYRIBShE3h9/+3d+bfbVzXHf/M
      DGYADPYdIEFwX0QtpGTJtuy6SZsmx81p8mf297bpaU/jtllqO4plWRvFPZmmoQAAEoZJREFU
      fQMJgiT2fYABZvqDHJvEDCVLsU218fc3not57/HOu++ucx9tzab0RBBYuvM+R6cVAtGUlQ50
      2i284TQfTC9Y16B4uXX7bWodg1K5itNh0wtIElAdAi6nk1Z3qBlWr8nj1S0GnTpfPPwCbyjJ
      /IR1HfvZfWYWrqHKBo3+eQGrVsq0amXqHR13IMZUOm55PpvdJ5ycZHJ28QI+KmgGxD3QGQiX
      bwJ160XKrR71eoVK02aDa3XKzQ7lSpVitWWlmwNOiiWajQan5cp5migxMXsV0eHk5q1lBu0y
      fcOqn0UMTk9OqdcbKG4PDukMWySFsGpQ66ksLl61bv4v52kUC9QadZo9E7+NlsodF+hpDU6K
      ZVs+NCpF/uPff8W//POv6Dusc+iNIqVWl3q9Qrlhs8G7DarNFqVyhWK1YaWbJp/du0enp1Nv
      DNFNg4OdNfYOTzg62OHJ6haqx2sZolkt8PDBU4xBnb2CzbvoVCg2u1SrVYr1Ibri5cbiLA41
      yPK1KxROc7Z8ENoNcoUKmiHjd59viBUO+jkpNZhduGK7+QFErUmuVKNWb+Lz+Sz0SqlIs92h
      Wq3Q0vTLN4EUd4CAW8RwhpgfTyANazVZfa7OBQdz0xM45aGTRxAJhULQ7zExs4DXrVhMIDcd
      NrLHILkZTcUQh50iUcQY6HR7OqrHhyxZVfv2+hPKtTqi04fXbe1E5pAFOm0NU5LxqlYBiEZC
      mP0BoxPT+D3D5gkcHeyj9SEU9BCMpfE6z/+fDneAoFtiIAdZmEra8MmN3+dBECRmpydxDfMJ
      k9zeDu5gFKfTTdDnOcMAgUAoiiLotDUdJJloOGgxMVyqD5fHx2giQSQUQB5ehOIj5FEwJRfz
      02MoknjeBBIlOpVjTkol1FCKWMi6QSWHg67WRnKqqE5rR7jKyR67h8/N3UjQ+rwoO9C1Nt0+
      BP1ei7nq9QfwKiKyL0YmFbl8E8gYdKlWG/QFhYFpIjPEVNOgWCyjD0R6/QEwxBQTauUyva5G
      q9ODkIdhaJKXpatJJFG09QG6rTr379/H63bjCiWtfojDSSQYoGeCqtpktU2D451V1oo6qfQ0
      yUjA8pNWrYzW7SK2rVqur/dIT82TzEyh6SYRr/XFm4MelUoNHeVLJ9nKp0KhjN4X6Op2vToF
      rt26jaYbSIpVQAE8/jBpl4/HDx/Sm5xg2Mrptesc5w9ZfZRn8YOfMx4a4oU5oFis0DUd6H0D
      hs8JY4AnNkoqHkW8oJ1i+fiQ7P4WvrkfERnyoxBE/P4gerOL4rIeIgCVkzz3V7eQXRHG04lh
      LtHvtmi22gg983mwwnaU7xGtUpaBf5z56ICVQxv7uFPgpOfl+lSM9V0btWn22c3XuL58k4Pt
      p7Zz9Ev7/OHxBof5wlcRlrNo1mso7gAjySAtzWbztHJUxCQ3xlSe7hWt9EGXtiERjSTAsPdT
      1nfyXL+5zMnBpoX25I+/5Xef3GN7/4hKtUZ/YPUhtEqWrifDtaTJo30bE0crc6y5uTGTYmM3
      a7uGWqXI8fERv//0vi29Wsjx7NkqPcHFsBIEcDjdxONxRmIBtK4dn/IUzSjXx/2s7J1a6QJk
      Vx+zsXtAoWzfMv+02mJuPo3WtWmaa/TYL7S5vnSD7PYz2+dPyk0S8Tget2QbjTo+zBJMzxKR
      mxyUtMvVANWTA3aOGnS6ddalAamF8ydTr1nm2WYOsdPl8UaFWGrm/AB6m5X1TTB6fPLxJ/gi
      9s5dOJVm5d4jHleqpBJRxCHVHR+f46fxMVpan3DE5nRUQkjtVZ7ugWE0qbYiBD1nTmnZw807
      76N1WkjOIbU86LG1uQGiwKMHD3F6rWUhS+/+DbVqheLpMaVKldH0GGe1f61wyPZBnZ5WYaU2
      YHT+/Br77QpP17MI7RafPjwlOn7Flg96V6Pd1pCdwye3Sf5gh1p7QCgc4cpoBsVGAkTJgaqq
      eKauE466OJs26NROWd85RWx1ebIjkhpbtC5AcJBKhllZe0o1s0A87Lf85OZbd2j2eiy7rD4I
      gkTIbfLo0RME0yB7UiGTON92c/nWW3T7XTRdYDhIdHqwzWlNo19bQxJhNiNfrgYIJsZYmEgy
      QETx+HE7zous4g2zvDgNgoDsUvEM24SyytXFayjCgGQySuWCizierO7jDAaJegTsmmR3G2We
      rW1w/+P/Jleznjx9QWF6fIRu32B2bv785gcw+mR3Nlhfe8bHD1bO0ySFmYVr+N0SiuzA57W+
      2Ea1RP7oiI5uMpKZwDMU4gzE0lydTtE3RRTVjzp0bDnUEMvX5tD7EA95aLQ7lvVVq1WCiQzz
      C1f48Md3LWuIpcaYnJxkfGyEB/c+RtOtnCrnNrn/aJ3Hf/hP/vGffk2z97UWcAfiLC+MM0BE
      dnlQFZut1e9wcJjDnZiCrn00rHicZeWPH/Ng88hCM4BUehzJ6BEbnbZsfoDK6QFra+t89Jv/
      YTjeER+bZiIVRhAl3KoPRXwDEmGCJGL0DVS3isMmrosk0e/qqKqKYnHsAExMBCTJgYB9BiYz
      kiIV8TOQVIsDDM+dYFmW8fm8ll75pf0VPvr4IXqvS1PwkLDxMUBAcjhwOl04bRw3AHQd0aWi
      2jjQhfwhfeF5m+92o/qlrzM0gyRh6ANU9QI+mSYIIpIkWfv9myaa1qbdbtOsFfn0s8dDgws4
      ZAWn04nL7WFubsbWBHKqPkLhCNFojLBPoT8YmkeW6Xd7qKqKbBsmVUhPzhMU26he6+kPIEkO
      PB7VEqqmU+Jf/+0jKq0euUqLhUl7bS9KDmRZQVXtfQQBEwMJVXUjisLlO8F6u4E7NkYmE0OS
      bJbTbWF4ImQyGUTRhqmCxNLtt+n1dFKp9HmaMWBzfYWe4UAQZIIB1VbiFdVPOi0ijk/gD5zf
      oKGxBe56Ttje3qdVblBudgl7rc6f4ApwdWrueVLNBrWuwdJ4BqfN5p259pbtM2fRb9dxRsfI
      ZBL2fJI93H33JrreJ60OCakkk0yNfvVnuTYkAEMYTVuTZACe8AjTZgWDGAvhMK7hYEGnjuBP
      Pn9Xw05ut86DZzu4nAput4oasBcAfziG5Anj8Q3RXSH+7sfvsbO5Rb/dYOeoxNSI1Zxs92Bh
      8SpXr0kWEwig3WoTTU2QSfiQHOLlawBFDdA+2WVl5RnVts1NIIoHWSs9r0gsWU2cga5x//Ez
      3Kqb+w8+P08UBFxOhU6ngyBKxGOx4VIXAE6za2wdltA0jcGQ3hRFiUB0hFvv3OWXH/4E7/BL
      /3Ke3OYKGzv7nF7g3EV9Cs+errC6fXghL14EhxqgW9xjZWWFcmvITDNN+vUTHmzmcRotHqzu
      vnCspRs3XmsNg55Grd5g9+lnHDUG1oia04fYzLOysvJVychXEB04HQJaV0d0OIlHrNlwgEef
      36fZ6dAbjmQJIm6Pn6vLt/jFL37JaMQaAgUwGnnuPVwje2TjhANev4+T7CYrqxu0u4M3QAC8
      ESIhDyPREKLdTSAOD+PJAIFI0poDACqFPPnDAzY3txjNDDnJgkh6Yo5rV+fpt8o8frbOsNYG
      cMpO6pUChWKJXt/+Kp3nw0kois3pK8os3bqJ6nLitUmCAYxmMri8IcLD/sM3hEMNEwt7SUVD
      SLIlvshxPsdRdo+dozITo8nXmuNlGOhdKpUKOvanK7KPsYSfSCSGLA/xSVa5sniV2YkUlZND
      1nbsDwKPwyR/WqTZufjqJEEQcDrtb4UZmb3OeNSLz2fjRAP+SAqnWyUTDyBI0uULQLOwy9Pt
      PO36MVt5m/Be55SN7T3yhRIb2RMLOZoaIxlPMnflCge76+eJRp8H937HJ3/4HDU6xuLshO2L
      C6dnuTGXIeD3W5Ng3wQDjYdPNlDQeLJmf/o+fvKMQqXE9u7Oq48PaKVdnmzl6dSOWcsNaRlB
      Ij0+TjwxynwmxnbW6kB+G1BDSW7fWmJ64SoJr81B0DpiZTNHsVxk/aBwntYp8tF//ZaHa/uM
      Tc8xMRKznePK7buMhAO4bWqdvgnWHj/EUJw8efzENgya299iY++IZiXPcaVz+T6AGholEzki
      W9S58Y6N1LoijKWiZCslFpaWrXTBwWQqwLMnD0lk5oZoEgvXbqL/6dgXHZbECMBJdoNff7bB
      lZQfRzDJmJ2ZcxF6DR6trFIsV/H7nLR79p9/zk5P8HDrEG9i/JuPfQbOYJrJWI69Qo+luzbq
      3xUm4Tri6XaOyczsa83xIpRyu+TKDcxmgZwwws9GbHikJphI+SmUaizeGlqDM8jbd772dSTb
      gAY8+vwzwo4Gu7piTYS9CMaA3a019nMFkq4AjXbbNiQST6VJHZbIN0SuzbgvXwAMvYcvFEP1
      BVDslqy3MQJT/GTByXaxA5x1jkwqhUNOqy0ERSUVHQqLCQIenzUrOwzZ6WYqEaXvEC6MJF0I
      xcfSzTvMzVTpCS4WLDUKz9EbQDKeIBx7vQ4ZA61ObPoWGXeNg1qXUPzrKIdpDDg+3KOl9XD5
      I4QvqLT8c2DwPIJiIoBNIhrTZFA7ohOc5YOZLk9Oa4ycrZsSHV99oPQieD0BeqoP6QU3P9pC
      lJicu0pmcopKs8e1uVnbiF9f14nHYnhCMRyYly8AkktFVSSqJzmC0SSqc7jWB/L72zg1Nw15
      yLbVynyxUeSv37uN2Wvy+88e8LcfvPtK89eKx1Q7Jqn0CP5IkljwNT7g73d4+OlvaIUWcAs9
      3r+9ZPmJz+el2ixweHTCaPzV70wzTYPszjZdpY48lThH0ypZtovw3p07NE92eLS+x7vXpy8Y
      6fUQG50kNgq61iJcKNPtDXCc7fZh9Mnu75PNi3i6ATLjr6iFjAH5o0NkXwBF9TObsNS7fiOs
      fPGA/aZBxC3xzjt3kYTheiYPilKhcHRANBa7fB8Aw0D1h5iYu0LEa+PYyF5GA1AzvSTDQyaS
      JCMaPZrNBq1mA8nx6ptX9QVIJBIkEgnyq/fIVuxLGV4IQcLlclI7PURULjh9JZlwNM7i/OSr
      jw/Inghus4HijxPynOeT6HCC3qbZbNJsacgvuaL1z4Hs8jA2NoZnuNWNJDN5/R1mIgo9vY/k
      eMWtJQgEw1ESiQRSI8fnNomwbwKv6qLbqtLsCrYRP9MEry/I7MIVfE7H5WsArX7KTq5NXCxR
      1u8wnxhKYHQKHByXUFNBdnMFRqNnTBrZzzs3Z8mdFgCRd9+28RFeAtnpRv5SbsanZ+g5XvxJ
      nwW9JqWuzPTSXeYUN6rbPgq0tbZKODPN0z9+zk9/9N4rr1Mr77Nb7JCMNNnON4hNf80Hpz/F
      tSmBQqGAJIdYuiBJ9J2jU6QlJ7ibMbi3X+D9xfTLn/kTBBH3l/kLd3qcbvXiaJwtjAGlWoOJ
      2Xl8o/OEgx5bE6h8nOW440Y82ES7cvfyBUCSnQy6RZr0iQ2bPwDuKJNjKfbLNRZuTFjJvjAz
      vm+n81wgbp8AeiEaOZ6ehPC2d5i/dtvWyQZwKxLNRgNRer3T2RXKMJc65bBssPTOkBMsCARj
      KYL2gZXvD0oAZ2+VJ3sgDhxUmvY1+y+DpIaYfFU3ZtDl6fo2dyfcbDWS3A3Zh0EVxUm30kbQ
      TRSHeLkCoLXq1LoSs+NJDHGUqHpeAEzToHicxxFIMB10EA/YlSFcMpwBxFaenj5gb2eTQCTB
      WOKMQBoDypUy4dFpNE0juvDqMXrT0MnnT4iNZBBkFZ9dnc2bAIeCbGh4A6NEAnFCXoXT9ssf
      +1YgOvArBlvHTQb9Q9Z2WsxPps8l61r1CrrsJxNTQEngd16yADyHSV+rs7Kxx9J7P2H0TAiy
      U82xflDj9tIslcMNnu2JLE1fknq/CN4kH9x5yaY2TUxMivk9Cn0/H35w65WmONp6RkmMsjAW
      4WDlM3ZcAabD352d/9ponZA9rZN2+dC6CpmYfbb2O4GkcPPWnZf/zjTptcqsrJR4/4MfXbYA
      GBSPjxgoAX729z+3FHn1mjUcXj/tVguny03t1L6C8I2GAINem4NcgdTMLW7F7GtgXoRqWyMQ
      l2m22gQDKuulJtPhN6vhsGmamN40N2aL7Bc1ll92KFwGzAEnRwdI/iT/8OHy875Nl7meWuEY
      DQVF0Nna3KA2VAvkS0wzGXGi6zq6w8fy/GvY6JeNgc7h0Sker49m6YjNPftvYV+EmblFXJKJ
      ruv0fWPcHH95buP7Rr2QZeewjDEY4HVLlBudlz/0PaOYP8RQPEj9FutbO7S7/TejM9y3jeHO
      cD/gu8fp/grHXZXiUZ6/up7k/onCe4vp7/xd/7l4Q72pH/B/DdHRGQKOPsu338JQQlydeHM3
      /Vm8AU7wD/j/ANHhZHzqT9lfJ/bZkDcPP2iAH/AXjR8E4Af8ReN/AYKRsqhYBDH3AAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='SALES QUANTITY' width='192'>
      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
      4Jh7OAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='TOP 5 CUSTOMERS' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='179' name='TOP 5 PRODUCT' width='192'>
      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
      eQoTP00jAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='29' name='YEAR' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAAdCAYAAAD8fGP2AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEoklEQVR4nO3cf0iUdxwH8He7YrmDydRR4sISmqnMNe4hzzH3xxNz5G6rM5lwugU1Ntsa
      uQtTYqIYNjjcuEhBGMI9S6mJmq5wcG2OO7GY3FAc2dRlZyZWqOBNzZv38Nkf54/M5e6u+3qy
      5/sC//D7+H2e79vn3ndfT3EDERE4TqGeCfUCOC6UeAE4ReMF4BSNF4BTNF4ATtF4AThF4wXg
      FI0XgFM0XgBO0XgBOEXjBeAUjReAUzReAE7RAiiAjIluCQVZIlIFAUKaHgVSD1yLhwfRWKBH
      miAgVfwAZ9pGIS8em4GzXcKZT/VIy5EwtHjOIUg5AgTh8Y9S2J8y4NNjkReAPIFr5sNITxMg
      CGnQF0jocSHEGGV19UCan7finCElA+Q3G5VlHCdL532aJaLZO01kFEUyOYiIPOQwpZNobKI7
      s0Sz/TX0odZAFqd3prP2E8ottpD9u0LSGCzkfOI1PPTrVyKJJTaa8n+BQcYm772LR0hjMFPX
      uIdo9j5ZS9JJe6yFxtY+4CNYZB2jlmNaMpi7aNxD5BnvIrNBS8bWyVAEfIyN/C/Awyma8jw6
      4CSLQUN5DWNE1EFlWh1V3lg45n0g65YG5q9bsnoBJlvJqNVTdZ/fqws+RnltJRoyWJzLv0Zb
      Rh0sMviKSVYblWiWikJENNVqJE1eQ4jLTkQPp8j/LdBmNdSqpU9dPc2w9sVDK0QCQwP4Y06D
      VxIXjqoQs+0ljA4OYdqPS/Rf+Ba2pGwceNnv1QUfo7ya9P0Yszaje0IG3A9wte06IjMzkMIo
      hk+YZI1Hwu4+WJu7MSEDkGfgfiEG0d296GOVw1eb1dgY+Gw3Br4vRH7lALSm88iNBZZv/Lxi
      tu0AWh9gDIDal9PKnWiqH4VYqMOWwBfHQHDzql8/iarbx3EkPQXTANRCAaQqDVSrzFk7wcy6
      BVmnTbh10oh3UlyYC4tAcsJWzMzFwcNs/b4LrADyIBrzj6Li3hsor/8aYvSTb9vI8G1gawqi
      fDz19M8NaAnPRc1en+qyNoKeV8ag9DE+6zkAyV6F7c9Oorv6CxzOD8OFc++FtvgM7q0qWsSp
      8yJOLQzYSyHcUvv2hMhYAO8CuWA/fRQVLgPqLhYv/wbF7sSuTb/h996FARkjw3cRHRfrY9h+
      1Fa3ISk7C4nr46kQbPLeRbv1BlL367H9ORWgisDuj3Kx53ojfhphFsQHLO/t0rzOa+3YpHkV
      u4K27kC5AijAyGXUXIlCXtkhxK14kKYgI/NvNNVcwrAbcA9IqGoJh+6txH870wpyZxPqR0W8
      r1tHmx8meaOwY2c42lu88yDPoLeuFrbI15AUwyaGTxjd2/Hebvz5lxvet1krcbZhIzKz94b+
      FWDkMjYQ+flfIeylEIxXVgzHf96IukOx3pfQohMw/zIMz/MJePdLEwrFaKgwBCnnIM6t+MlH
      h28cpXgTLvx44m1UvHgW1qI962QvDHZ53QP4obwM5qs34ZoLQ0TyPhSVF6665WCOUdakDhPy
      iy/hpmsOYRHJ2FdUPj8vxOylARSA4/5H+J9CcIrGC8ApGi8Ap2i8AJyi/ecvwhwOx1qsg+NC
      4h/sTXFD/MH1dwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
